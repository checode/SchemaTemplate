server:
  port: 8103

spring:
  application:
    name: hystrixmodel
  cloud:
    loadbalancer:
      retry:
        # 开启重试机制，默认关闭
        enabled: true
eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8100/eureka/

ribbon:
  # 请求连接的超时时间- 限制3秒内必须请求到服务，并不限制服务处理的返回时间
  ConnectTimeout: 3000
  # 请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout
  ReadTimeout: 5000
  # 对所有操作请求都进行重试
  OkToRetryOnAllOperations: true
  # 对当前实例的重试次数
  MaxAutoRetries: 1
  # 切换实例的重试次数
  MaxAutoRetriesNextServer: 1

hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            # 断路器的超时时间,下级服务返回超出熔断器时间，即便成功，消费端消息也是TIMEOUT,
            ## 所以一般断路器的超时时间需要大于ribbon的超时时间,
            ## 若开始重试机制，至少需要ribbon的超时时间乘以重试次数的时间
            timeoutInMilliseconds: 10000
      circuitBreaker:
        # 当在配置时间窗口内达到此数量的失败后，进行短路。默认20个）
        requestVolumeThreshold: 5
        # 短路多久以后开始尝试是否恢复，默认5s
        sleepWindowInMilliseconds: 20
        # 出错百分比阈值，当达到此阈值后，开始短路。默认50%
        errorThresholdPercentage: 50%
